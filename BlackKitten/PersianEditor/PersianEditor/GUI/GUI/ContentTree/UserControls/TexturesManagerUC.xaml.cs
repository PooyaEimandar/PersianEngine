/*
 * Copyright (c) BaziPardaz.Co Ltd. All rights reserved.
 * 
 * File Name        : TexturesManagerUC.cs
 * File Description : Texture manager user control
 * Generated by     : Pooya Eimandar
 * Last modified by : Pooya Eimandar on 9/23/2013
 * Comment          : 
 */

using System;
using System.Collections.Generic;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Threading;
using PersianCore;
using Telerik.Windows.Controls;

namespace PersianEditor.UserControls
{
    public partial class TexturesManagerUC : UserControl
    {
        #region Fieds & Properties

        class Node
        {
            public string Name { get; set; }
            public string MeshName { get; set; }
            public string TexturePath { get; set; }
            public bool isReady { get; set; }
        }
        RadTreeViewItem currentItem;

        #endregion

        #region Constructor/Destructor

        public TexturesManagerUC()
        {
            InitializeComponent();
            List<Node> list = new List<Node>()
            {
                new Node() { Name ="No Mesh selected"},
            };
            this.treeView.ItemsSource = list;
        }

        #endregion

        #region Methods

        public void Refresh()
        {
            if (ObjectsManager.SelectedMeshes == null || ObjectsManager.SelectedMeshes.Count == 0) return;
            
            var diffuseMaps = ObjectsManager.SelectedMeshes[0].DiffuseMaps;
            var list = new List<Node>(ObjectsManager.SelectedMeshes[0].Model.Meshes.Count);
            foreach (var mesh in ObjectsManager.SelectedMeshes[0].Model.Meshes)
            {
                list.Add(new Node()
                {
                    Name = mesh.Name,
                    isReady = true
                });
            }
            if (list.Count > 0)
            {
                this.treeView.ItemsSource = list;
                this.treeView.LoadOnDemand += new EventHandler<Telerik.Windows.RadRoutedEventArgs>(treeView_LoadOnDemand);
                this.treeView.ItemPrepared += new EventHandler<RadTreeViewItemPreparedEventArgs>(treeView_ItemPrepared);
            }
        }

        private void treeView_ItemPrepared(object sender, RadTreeViewItemPreparedEventArgs e)
        {
            RadTreeViewItem item = e.PreparedItem;
            if (item.Item != null && item.Item.GetType() == typeof(RadTreeViewItem))
            {
                item.IsLoadOnDemandEnabled = false;
            }
        }

        private void treeView_LoadOnDemand(object sender, Telerik.Windows.RadRoutedEventArgs e)
        {
            currentItem = e.OriginalSource as RadTreeViewItem;
            Node c = (currentItem.Item as Node);
            if (c.isReady && c.TexturePath == null)
            {
                System.Windows.Threading.DispatcherTimer pageTimer = new System.Windows.Threading.DispatcherTimer();
                pageTimer.Interval = TimeSpan.FromMilliseconds(100);
                pageTimer.Tick += new EventHandler(loadOnDemandTimer_Tick);
                pageTimer.Start();
            }
        }

        private void loadOnDemandTimer_Tick(object sender, EventArgs e)
        {
            string meshName = (this.currentItem.Item as Node).Name;
            this.currentItem.Items.Clear();
            this.currentItem.Items.Add(new Node()
                {
                    Name = "NormalMap",
                    MeshName = meshName,
                    TexturePath = "/PersianEditor;component/Resources/Images/Texture.png",
                    isReady = false
                });
            this.currentItem.Items.Add(new Node()
            {
                Name = "SpecularMap",
                MeshName = meshName,
                TexturePath = "/PersianEditor;component/Resources/Images/Texture.png",
                isReady = false
            });
            currentItem.IsLoadOnDemandEnabled = false;
            (sender as DispatcherTimer).Stop();
        }

        #endregion

        #region Events

        private void BrowseClick(object sender, RoutedEventArgs e)
        {
            var ResponsibleTexBlock = (((sender as RadButton).Parent as Grid).Children[1] as TextBlock);

            ObjectsManager.SelectedMeshes[0].textureToBeChangedInfo.MeshName = ResponsibleTexBlock.Tag.ToString();
            ObjectsManager.SelectedMeshes[0].textureToBeChangedInfo.textureToBeChanged = ENUMS.StringToEnum<PersianCore.Meshes.Mesh.TextureToBeChanged>(ResponsibleTexBlock.Text);
            Windows.ShellWin parent = this.GetVisualParent<Windows.ShellWin>();
            parent.ImportProcess("Import Texture", "Texture Files (*.bmp;*.jpg;*.png;*.tga;*.dds)|*.bmp;*.jpg;*.png;*.tga;*.dds|All Files (*.*)|*.*", false, false,
                @"Textures\Utilities\NormalMaps\");
        }

        #endregion
    }
}
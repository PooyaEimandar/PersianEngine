/*
* Copyright (c) BaziPardaz.Co Ltd. All rights reserved.
*
* File Name        : Transition.fx
* File Description : The transition shader
* Generated by     : Pooya Eimandar
* Last modified by : Pooya Eimandar on 12/28/2013
* Comment          :
*/

cbuffer Params : register(b0)
{
	float FadeAmount : packoffset(c0.x);
	float SmoothSize : packoffset(c0.y);
};

texture texture1;
sampler tSampler1 = sampler_state
{
	Texture = <texture1>;
};

texture texture2;
sampler tSampler2 = sampler_state
{
	Texture = <texture2>;
};

struct VSI
{
	float3 Position : POSITION0;
	float2 UV		: TEXCOORD0;
};

struct VSO
{
	float4 Position : POSITION0;
	float2 UV		: TEXCOORD0;
};

VSO VS(VSI IN)
{
	VSO OUT = (VSO) 0;
	OUT.Position = float4(IN.Position, 1);
	OUT.UV = IN.UV;
	return OUT;
}

// Transition
float4 PS(VSO IN) : COLOR
{
	float4 ColorSource = tex2D(tSampler1, IN.UV);
	float4 ColorDest = tex2D(tSampler2, IN.UV);
	
	float4 finalColor = lerp(ColorSource, ColorDest, smoothstep(FadeAmount, FadeAmount + SmoothSize, IN.UV.x));
	finalColor.a = 1;

	return finalColor;
}

technique technique0
{
	pass pass0
	{
		// A post process shader only needs a pixel shader.
		VertexShader = compile vs_2_0 VS();
		PixelShader = compile ps_2_0 PS();
	}
}
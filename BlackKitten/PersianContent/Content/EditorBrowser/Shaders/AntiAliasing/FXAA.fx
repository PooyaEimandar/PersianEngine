/*
* Copyright (c) BaziPardaz.Co Ltd. All rights reserved.
*
* File Name        : FXAA.fx
* File Description : The FXAA shader
* Generated by     : Pooya Eimandar
* Last modified by : Pooya Eimandar on 12/28/2013
* Comment          :
*/

cbuffer param
{
	matrix WVP;
	float2 InverseViewportSize;
	float4 ConsoleSharpness;
	float4 ConsoleOpt1;
	float4 ConsoleOpt2;
	float SubPixelAliasingRemoval;
	float EdgeThreshold;
	float EdgeThresholdMin;
	float ConsoleEdgeSharpness;
	float ConsoleEdgeThreshold;
	float ConsoleEdgeThresholdMin;
	// Must keep this as constant register instead of an immediate
	float4 Console360ConstDir = float4(1.0, -1.0, 0.25, -0.25);
};

texture TheTexture : register(t0);
sampler TheSampler : register(s0) = sampler_state
{
	Texture = <TheTexture>;
};

#ifdef XBOX
	#define FXAA_360 1
#else
	#define FXAA_PC 1
#endif
#define FXAA_HLSL_3 1
#define FXAA_GREEN_AS_LUMA 1

#include "Fxaa3_11.fxh"

struct VSI
{
    float4 Pos : POSITION0;
	float2 UV  : TEXCOORD0;
};

struct VSO
{
	float4 Pos : POSITION0;
	float2 UV  : TEXCOORD0;
};

VSO VS(VSI IN)
{
    VSO OUT = (VSO) 0;

	OUT.Pos = mul(IN.Pos, WVP);
	OUT.UV = IN.UV;

	return OUT;
}

float4 PS_FXAA(in float2 texCoords : TEXCOORD0) : COLOR0
{
	float4 theSample = tex2D(TheSampler, texCoords);

	return FxaaPixelShader(
		texCoords,
		0,	// Not used in PC or Xbox 360
		TheSampler,
		TheSampler,			// *** TODO: For Xbox, can I use additional sampler with exponent bias of -1
		TheSampler,			// *** TODO: For Xbox, can I use additional sampler with exponent bias of -2
		InverseViewportSize,	// FXAA Quality only
		ConsoleSharpness,		// Console only
		ConsoleOpt1,
		ConsoleOpt2,
		SubPixelAliasingRemoval,	// FXAA Quality only
		EdgeThreshold,// FXAA Quality only
		EdgeThresholdMin,
		ConsoleEdgeSharpness,
		ConsoleEdgeThreshold,
		ConsoleEdgeThresholdMin,
		Console360ConstDir
		);
}

float4 PS(in float2 texCoords : TEXCOORD0) : COLOR0
{
	return tex2D(TheSampler, texCoords);
}

technique Standard
{
    pass Pass1
    {
        VertexShader = compile vs_3_0 VS();
        PixelShader = compile ps_3_0 PS();
    }
}

technique FXAA
{
    pass Pass1
    {
        VertexShader = compile vs_3_0 VS();
		PixelShader = compile ps_3_0 PS_FXAA();
    }
}
